# Bazel build configuration

load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")
load("//bazel:canisters.bzl", "rust_canister")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "evm_rpc_lib",
    srcs = glob(
        ["src/**/*.rs"],
        exclude = [
            "src/main.rs",
        ],
    ),
    crate_name = "evm_rpc",
    deps = [
        "//rs/ethereum/cketh/minter:minter",
        "//rs/types/ic00_types",
        "//rs/rust_canisters/dfn_core",
        "//rs/rust_canisters/http_types",
        "@crate_index//:candid",
        "@crate_index//:ethers-core",
        "@crate_index//:hex",
        "@crate_index//:ic-canister-log",
        "@crate_index//:ic-cdk",
        "@crate_index//:ic-metrics-encoder",
        "@crate_index//:ic-stable-structures",
        "@crate_index//:num",
        "@crate_index//:num-traits",
        "@crate_index//:serde",
        "@crate_index//:serde_json",
        "@crate_index//:url",
        "@crate_index//:wasm-bindgen",
    ],
    proc_macro_deps = [
        "@crate_index//:async-trait",
        "@crate_index//:ic-cdk-macros",
    ],
)

[rust_canister(
    name = "evm_rpc" + target_suffix,
    srcs = [
        "src/main.rs",
    ],
    crate_features = [],
    crate_name = "evm_rpc",
    service_file = "candid/evm_rpc.did",
    deps = [
        ":evm_rpc_lib",
        "//rs/ethereum/cketh/minter:minter",
        "//rs/rust_canisters/http_types",
        "@crate_index//:candid",
        "@crate_index//:hex",
        "@crate_index//:ic-canister-log",
        "@crate_index//:ic-cdk",
        "@crate_index//:ic-metrics-encoder",
    ],
    proc_macro_deps = [
        "@crate_index//:ic-cdk-macros",
    ],
) for target_suffix in ["", "_debug"]]

rust_test(
    name = "unit_tests",
    srcs = glob(["src/**/*.rs"]),
    crate = ":_wasm_evm_rpc",
    data = [":candid/evm_rpc.did"],
    env = {
        "CARGO_MANIFEST_DIR": "rs/ethereum/evm_rpc",
    },
    deps = [
        ":evm_rpc_lib",
    ],
)

rust_test(
    name = "integration_tests",
    srcs = ["tests/tests.rs"],
    data = [
        ":evm_rpc_debug.wasm",
        "//rs/canister_sandbox",
        "//rs/canister_sandbox/sandbox_launcher",
        "//rs/rosetta-api/icrc1/ledger:ledger_canister_u256.wasm",
    ],
    env = {
        "CARGO_MANIFEST_DIR": "rs/ethereum/evm_rpc",
        "EVM_RPC_WASM_PATH": "$(rootpath :evm_rpc_debug.wasm)",
        "IC_ICRC1_LEDGER_WASM_PATH": "$(rootpath //rs/rosetta-api/icrc1/ledger:ledger_canister_u256.wasm)",
        "LAUNCHER_BINARY": "$(rootpath //rs/canister_sandbox/sandbox_launcher)",
        "SANDBOX_BINARY": "$(rootpath //rs/canister_sandbox)",
    },
    proc_macro_deps = [
        "@crate_index//:strum_macros",
    ],
    deps = [
        ":evm_rpc_lib",
        "//packages/icrc-ledger-types:icrc_ledger_types",
        "//rs/ethereum/cketh/minter:minter",
        "//rs/rosetta-api/icrc1/ledger",
        "//rs/rust_canisters/http_types",
        "//rs/state_machine_tests",
        "//rs/test_utilities/load_wasm",
        "//rs/types/base_types",
        "//rs/types/ic00_types",
        "@crate_index//:assert_matches",
        "@crate_index//:candid",
        "@crate_index//:ethers-core",
        "@crate_index//:hex",
        "@crate_index//:ic-cdk",
        "@crate_index//:maplit",
        "@crate_index//:num-traits",
        "@crate_index//:serde",
        "@crate_index//:serde_json",
    ],
)
